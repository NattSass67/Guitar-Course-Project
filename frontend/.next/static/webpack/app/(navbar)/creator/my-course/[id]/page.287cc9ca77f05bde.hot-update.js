"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(navbar)/creator/my-course/[id]/page",{

/***/ "(app-pages-browser)/./src/services/video.ts":
/*!*******************************!*\
  !*** ./src/services/video.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteCourseVideo: function() { return /* binding */ deleteCourseVideo; },\n/* harmony export */   fetchRenderVideoCreator: function() { return /* binding */ fetchRenderVideoCreator; },\n/* harmony export */   fetchRenderVideoLearner: function() { return /* binding */ fetchRenderVideoLearner; },\n/* harmony export */   uploadVideo: function() { return /* binding */ uploadVideo; }\n/* harmony export */ });\n/* harmony import */ var _sessions_my_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/sessions/my-auth */ \"(app-pages-browser)/./src/sessions/my-auth.ts\");\n\nconst backendUrl = \"http://localhost:5000\";\nasync function uploadVideo(file, title, description, courseId) {\n    const formData = new FormData();\n    formData.append(\"video\", file);\n    formData.append(\"description\", description);\n    formData.append(\"title\", title);\n    console.log(formData.values);\n    try {\n        const response = await fetch(\"\".concat(backendUrl, \"/api/upload/\").concat(courseId), {\n            method: \"POST\",\n            headers: {\n                Authorization: \"Bearer \".concat((0,_sessions_my_auth__WEBPACK_IMPORTED_MODULE_0__.getToken)())\n            },\n            body: formData\n        });\n        if (response.ok) {\n            alert(\"File uploaded successfully!\");\n            return await response.json();\n        } else {\n            const errorData = await response.json();\n            console.error(\"Error uploading file:\", errorData);\n            alert(\"File upload failed. Please try again.\");\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error uploading file:\", error);\n        alert(\"File upload failed. Please try again.\");\n        return null;\n    }\n}\nasync function deleteCourseVideo(id) {\n    try {\n        const response = await fetch(\"\".concat(backendUrl, \"/api/delete-video/\").concat(id), {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat((0,_sessions_my_auth__WEBPACK_IMPORTED_MODULE_0__.getToken)())\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! Status: \".concat(response.status));\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error:\", error);\n        return null; // Return null or handle the error appropriately\n    }\n}\nasync function fetchRenderVideoLearner(video) {\n    if (!video) {\n        return \"\";\n    }\n    try {\n        // Make a GET request to your backend API to fetch the video\n        const response = await fetch(\"\".concat(backendUrl, \"/api/video/learner/\").concat(video._id), {\n            headers: {\n                Authorization: \"Bearer \".concat((0,_sessions_my_auth__WEBPACK_IMPORTED_MODULE_0__.getToken)()) // Include the bearer token in the request header\n            }\n        });\n        if (!response.ok) {\n            console.error(\"Failed to fetch video: \".concat(response.status, \" \").concat(response.statusText));\n            return \"\";\n        }\n        // Convert the video data to blob\n        console.log(response);\n        const videoBlob = await response.blob();\n        // Create a blob URL from the video data received from the server\n        const videoUrl = URL.createObjectURL(videoBlob);\n        return videoUrl;\n    // Set the video URL to play the video\n    } catch (error) {\n        console.error(\"Error fetching video:\", error);\n        return \"\";\n    }\n}\nasync function fetchRenderVideoCreator(video) {\n    if (!video) {\n        return \"\";\n    }\n    try {\n        // Make a GET request to your backend API to fetch the video\n        const response = await fetch(\"\".concat(backendUrl, \"/api/video/creator/\").concat(video._id), {\n            headers: {\n                Authorization: \"Bearer \".concat((0,_sessions_my_auth__WEBPACK_IMPORTED_MODULE_0__.getToken)()) // Include the bearer token in the request header\n            }\n        });\n        if (!response.ok) {\n            console.error(\"Failed to fetch video: \".concat(response.status, \" \").concat(response.statusText));\n            return \"\";\n        }\n        // Convert the video data to blob\n        console.log(response);\n        const videoBlob = await response.blob();\n        // Create a blob URL from the video data received from the server\n        const videoUrl = URL.createObjectURL(videoBlob);\n        console.log(video);\n        return videoUrl;\n    // Set the video URL to play the video\n    } catch (error) {\n        console.error(\"Error fetching video:\", error);\n        return \"\";\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/video.ts\n"));

/***/ })

});